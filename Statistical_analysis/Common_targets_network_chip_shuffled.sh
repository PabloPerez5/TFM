#!/bin/bash

# Author: Pablo Pérez Martínez
#
# Date: 27-04-2021
#
################################# DESCRIPTION #################################
#
# This script generates random permutations of the TF ChIP-seq regions through
# the reference genome. It uses bedtools shuffle function to reposition each
# peak on a random chromosome at a random position, but preserving the original
# size and strand.
#
# The permuted regions are annotated and associated to target genes based on
# the nearest TSS (HOMER annotatePeaks.pl function). 
# 
# The target genes identified from the permuted ChIP-seq are compared with the
# target genes identified by individual TF network approach to determine the
# number of common target genes between network approach and randomly permuted
# ChIP-seq regions.
#
################################# REQUIREMENTS ################################
#
# The subdirectories with the required input files should be located in the 
# same parent directory and this script should be run from that directory.
# The required input files are:
# - Lists of target genes filtered by gene expression from network approach:
#   $network'_network_target_genes/'$network'_'$TF'_nodes_filt.txt'
#   These files are generated by "Network_chip_consistency.sh"
# - Chip-seq peak coordinates (all and splitted by motif/no motif match):
#   ChIP_coordinates_'$if_motif'/'$TF'_coordinates_'$if_motif'.bed'
# - Reference genome.fa
# - Reference genome blacklisted regions .bed
# - Reference genome chromsizes
# - gtf file with annotations
#
################################# MAIN ########################################

# Define output directory and subdirectories location.
OUT_DIR='Permutations'

if ! [ -d $OUT_DIR ]; then

  mkdir $OUT_DIR
  
fi

for peakset in ATAC H3K4me3 H3K27ac_enhancers H3K27ac_promoters

do
  
  OUT_SUBDIR_1=$OUT_DIR/$peakset
  
  if ! [ -d $OUT_SUBDIR_1 ]; then
  
  mkdir $OUT_SUBDIR_1
  
  fi
  
  for if_motif in motif no_motif all
  
  do
  
    OUT_SUBDIR_2=$OUT_SUBDIR_1/$if_motif
        
    if ! [ -d $OUT_SUBDIR_2 ]; then

    mkdir $OUT_SUBDIR_2
    
    fi
    
    for TF in Bhlha15 Foxa2 Gata4 Gata6 Hnf1a Nfic Nr5a2 Ptf1a Rbpjl
    
    do
    	 
	# Define output file locations
	OUT_FILE=$TF'_'$peakset'_'$if_motif'_permutationNumbers.txt'
	
	NumberOfIterations=100 # it takes ~1 minute for each iteration
	                       # (~100 minutes to iterate all "for loops")
	                       
	echo -e "\nNumber of iterations = $NumberOfIterations\n"
	
	echo -e "Performing permutations on $TF ChIP-seq $if_motif coordinates.\n"
	
	# Path to lists of target genes filtered by gene expression from
	# individual TF network approach
	NETWORK_GENES_FILE_PATH=$peakset'_network_target_genes/'$peakset'_'$TF'_nodes_filt.txt'

        # Path to bed file with ChIP-coordinates to compare with
	BED_CHIP_FILE_PATH='ChIP_coordinates_'$if_motif'/'$TF'_coordinates_'$if_motif'.bed' 

	CHROMSIZE_PATH=mm10.chromsizes

        # Output file with shuffled ChIP-seq coordinates
	BEDTOOLS_SHUFFLE_FILE=$TF'_coordinates_'$if_motif'_shuffled.bed'
	
	# Output file with target genes associated to the shuffled coordinates
	BEDTOOLS_SHUFFLE_GENES_FILE=$TF'_genes_'$if_motif'_shuffled.txt'
	
	# Output file with filtered target genes from permutations
	SHUFFLE_GENES_FILTERED_FILE=$TF'_genes_'$if_motif'_shuffled_filtered.txt'

	BLACKLIST_PATH=mm10.blacklist.bed

	GENOME_PATH=mm10_genome.fa
	
	ANNOTATION_FILE_PATH=genes_annotation.gtf

        # List of genes with pancreatic expression expression levels >= 1 RPKM
	EXPRESSED_GENES=Pancreas_expressed_TFs.txt

	TMPDIR=tmp
	mkdir $TMPDIR
	
	# Bedtools shuffle

	touch $TMPDIR/$OUT_FILE
	
	if [ $? -ne 0 ]; then
	
	    echo 'Problem with touch txt file'
	    
	    rm -r $TMPDIR
	    
	    exit 1
	fi
	
	for ((iterationNb=1; iterationNb<=NumberOfIterations; iterationNb++))
	
	do
		echo "Iteration number: $iterationNb"
		
		echo "bedtools shuffle"	
		
		bedtools shuffle -seed $iterationNb -excl $BLACKLIST_PATH -noOverlapping -i $BED_CHIP_FILE_PATH -g $CHROMSIZE_PATH > $TMPDIR/$BEDTOOLS_SHUFFLE_FILE
		
	if [ $? -ne 0 ]; then
	
	    echo 'Problem with bedtools shuffle'
	    
	    rm -r $TMPDIR
	    
	    exit 1
	    
	fi

	# Annotate shuffled coordinates to obtain the genes asociated to those
	# regions and compare to the identified target genes by individual TF
	# network approach
	cut -f 12 <(annotatePeaks.pl <(cut -f 1-3 $TMPDIR/$BEDTOOLS_SHUFFLE_FILE) $GENOME_PATH -gtf $ANNOTATION_FILE_PATH -cpu 10) | tail -n +2 | sed -e 's/.*/\L&/' -e 's/\w/\u&/' | sort | uniq > $TMPDIR/$BEDTOOLS_SHUFFLE_GENES_FILE
	
	if [ $? -ne 0 ]; then
	
	    echo 'Problem with homer annotatepeaks.pl'
	    
	    rm -r $TMPDIR
	    
	    exit 1
	    
	fi
	
	# Filter the list of genes identified from the shuffled coordinates
	# comparing it with the list of pancreas-expressed genes
	# The same was done for the target genes identified by network approach
	# when running "Network_chip_consistency.sh" 
	comm -12 $TMPDIR/$BEDTOOLS_SHUFFLE_GENES_FILE <(sort $EXPRESSED_GENES | sed -e 's/.*/\L&/' -e 's/\w/\u&/') > $TMPDIR/$SHUFFLE_GENES_FILTERED_FILE
	
	echo -e "\nComparing the identified genes for the shuffled coordinates with the $TF target genes identified in the $peakset network.\n"
	
	common_genes=$(comm -12 $NETWORK_GENES_FILE_PATH $TMPDIR/$SHUFFLE_GENES_FILTERED_FILE | sed '/^[[:space:]]*$/d' | wc -l)

	if [ $? -ne 0 ]; then
	
	    echo 'Problem with comm for gene lists comparison'
	    
	    rm -r $TMPDIR
	    
	    exit 1
	    
	fi
	
		echo "Permutation_number_$iterationNb	$common_genes" >> $TMPDIR/$OUT_FILE
		
	done
	
	echo "Moving output files to their destination folder"
	
	mv $TMPDIR/$OUT_FILE $OUT_SUBDIR_2
				
	rm -r $TMPDIR
	
    done
    
  done

done
